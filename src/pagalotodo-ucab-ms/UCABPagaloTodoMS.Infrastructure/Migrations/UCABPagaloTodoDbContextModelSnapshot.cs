// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UCABPagaloTodoMS.Infrastructure.Database;

#nullable disable

namespace UCABPagaloTodoMS.Infrastructure.Migrations
{
    [DbContext(typeof(UCABPagaloTodoDbContext))]
    partial class UCABPagaloTodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.DetalleDeOpcionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DetalleDeOpcionEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.DetalleDePagoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("detalle")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DetalleDePagoEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.OpcionDePagoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<Guid?>("DetalleDeOpcionEntityId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PagoEntityId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<int?>("estatus")
                        .HasColumnType("integer");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DetalleDeOpcionEntityId");

                    b.HasIndex("PagoEntityId");

                    b.ToTable("OpcionDePagoEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.PagoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<Guid?>("DetalleDePagoEntityId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<double?>("monto")
                        .HasColumnType("double precision");

                    b.Property<DateOnly?>("nombre_completo")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("DetalleDePagoEntityId");

                    b.ToTable("PagoEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ServicioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ServicioEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.UsuarioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.Property<string>("apellido")
                        .HasColumnType("text");

                    b.Property<string>("correo")
                        .HasColumnType("text");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("preguntas_de_seguridad")
                        .HasColumnType("text");

                    b.Property<string>("preguntas_de_seguridad2")
                        .HasColumnType("text");

                    b.Property<string>("respuesta_de_seguridad")
                        .HasColumnType("text");

                    b.Property<string>("respuesta_de_seguridad2")
                        .HasColumnType("text");

                    b.Property<string>("usuario")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuario");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UsuarioEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ValoresEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apellido")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Identificacion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Valores");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.AdministradorEntity", b =>
                {
                    b.HasBaseType("UCABPagaloTodoMS.Core.Entities.UsuarioEntity");

                    b.HasDiscriminator().HasValue("AdministradorEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ConsumidorEntity", b =>
                {
                    b.HasBaseType("UCABPagaloTodoMS.Core.Entities.UsuarioEntity");

                    b.Property<Guid?>("PagoEntityId")
                        .HasColumnType("uuid");

                    b.Property<int?>("ci")
                        .HasColumnType("integer");

                    b.HasIndex("PagoEntityId");

                    b.HasDiscriminator().HasValue("ConsumidorEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.PrestadorEntity", b =>
                {
                    b.HasBaseType("UCABPagaloTodoMS.Core.Entities.UsuarioEntity");

                    b.Property<bool?>("estado")
                        .HasColumnType("boolean");

                    b.Property<string>("nombre_empresa")
                        .HasColumnType("text");

                    b.Property<Guid?>("opcion_de_pagoId")
                        .HasColumnType("uuid");

                    b.Property<int?>("rif")
                        .HasColumnType("integer");

                    b.Property<Guid?>("servicioId")
                        .HasColumnType("uuid");

                    b.HasIndex("opcion_de_pagoId");

                    b.HasIndex("servicioId");

                    b.HasDiscriminator().HasValue("PrestadorEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.OpcionDePagoEntity", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.DetalleDeOpcionEntity", "DetalleDeOpcionEntity")
                        .WithMany()
                        .HasForeignKey("DetalleDeOpcionEntityId");

                    b.HasOne("UCABPagaloTodoMS.Core.Entities.PagoEntity", "PagoEntity")
                        .WithMany()
                        .HasForeignKey("PagoEntityId");

                    b.Navigation("DetalleDeOpcionEntity");

                    b.Navigation("PagoEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.PagoEntity", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.DetalleDePagoEntity", "DetalleDePagoEntity")
                        .WithMany()
                        .HasForeignKey("DetalleDePagoEntityId");

                    b.Navigation("DetalleDePagoEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.ConsumidorEntity", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.PagoEntity", "PagoEntity")
                        .WithMany()
                        .HasForeignKey("PagoEntityId");

                    b.Navigation("PagoEntity");
                });

            modelBuilder.Entity("UCABPagaloTodoMS.Core.Entities.PrestadorEntity", b =>
                {
                    b.HasOne("UCABPagaloTodoMS.Core.Entities.OpcionDePagoEntity", "opcion_de_pago")
                        .WithMany()
                        .HasForeignKey("opcion_de_pagoId");

                    b.HasOne("UCABPagaloTodoMS.Core.Entities.ServicioEntity", "servicio")
                        .WithMany()
                        .HasForeignKey("servicioId");

                    b.Navigation("opcion_de_pago");

                    b.Navigation("servicio");
                });
#pragma warning restore 612, 618
        }
    }
}
